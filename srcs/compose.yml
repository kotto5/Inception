version: "3"
services:
  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: ./Dockerfile
    image: inception_nginx_dayo
    container_name: nginx
    ports:
      - "${OPEN_PORT}:443"
    volumes:
      - wordpress_sites:/var/www/html
    depends_on:
      wordpress:
        condition: service_healthy
    networks:
      - frontend
  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: ./Dockerfile
    image: inception_wordpress_dayo
    restart: always
    volumes:
      - wordpress_sites:/var/www/html
    networks:
      - frontend
      - backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASSWORD}
      DB_HOST: db
      WP_DATA_PATH: /var/www/html
      WP_URL: ${WP_URL}
      WP_TITLE: ${WP_TITLE}
      WP_ADMIN_USER: ${WP_ADMIN_USER}
      WP_ADMIN_PASSWORD: ${WP_ADMIN_PASSWORD}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      WP_EDITOR_USER: ${WP_EDITOR_USER}
      WP_EDITOR_PASSWORD: ${WP_EDITOR_PASSWORD}
      WP_EDITOR_EMAIL: ${WP_EDITOR_EMAIL}
      WP_DEBUG: ${WP_DEBUG}
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9000 > /dev/null 2>&1 ; expr $? = 56"]
      # curl(56) は connection reset by peer. それ以前は 7 で、接続エラー.
      # fastcgi なので http通信は出来ない. reset されることでサーバーの起動を確認する
      # fastcgi server にリクエストを送るコマンドがあれば採用したい
      interval: 5s
      timeout: 5s
      retries: 100
      start_period: 5s
  db:
    build:
      context: ./requirements/mariadb
      dockerfile: ./Dockerfile
    image: inception_mariadb_dayo
    restart: always
    environment:
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mariadb", "-h", "db", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 3

volumes:
  wordpress_sites:
    driver_opts:
      o: bind
      device: ${WP_VOLUME_DIR}
      type: none
  db_data:
    driver: local
    driver_opts:
      o: bind
      device: ${DB_VOLUME_DIR}
      type: none

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
